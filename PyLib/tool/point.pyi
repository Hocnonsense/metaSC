from _typeshed import Incomplete

class Boundary:
    def __init__(self, xboundary, yboundary) -> None: ...
    def __call__(self, x, y): ...
    @property
    def x(self): ...
    @property
    def y(self): ...

def istuple(tuple_x, _y: Incomplete | None = ...): ...

class Point:
    boundary: Incomplete
    def __init__(self, x, y, boundary: Boundary = ...) -> None: ...
    x: Incomplete
    y: Incomplete
    def __call__(self, d_x: int = ..., d_y: int = ..., absolute: bool = ...): ...
    def move(self, d_x: int = ..., d_y: int = ...): ...
    def around(self): ...
