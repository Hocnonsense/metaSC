from PyLib.PyLibTool.file_info import verbose_import as verbose_import
from _typeshed import Incomplete
from typing import Any, Dict, List, TextIO, Tuple

def read_nan(dtype: type, numstr: str, *nanstr) -> Any: ...
def iRep(text: TextIO) -> list: ...
def check_head(head: str): ...

class ctgDepthSample:
    ctg_depth: Incomplete
    i: int
    j: int
    def __init__(self, contig_depths, sample: str, isvar: bool = ...) -> None: ...
    def __getitem__(self, contigName): ...

def jgi_depths(text: TextIO) -> Tuple[List[str], Dict[str, Tuple[Tuple[int, float], List[float], List[float]]]]: ...
def fasta(text): ...
