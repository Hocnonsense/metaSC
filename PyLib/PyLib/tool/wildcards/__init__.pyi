from . import common as common, formatter as formatter, pattern as pattern
from _typeshed import Incomplete

def fmter(_pattern, nstep: int = ..., keep_missing: bool = ..., fill_missing: bool = ..., missing_value: Incomplete | None = ..., quote_all: formatter.Union[None, bool, formatter.string.Formatter] = ...): ...
def epder(*_patterns, keep_missing: bool = ..., fill_missing: bool = ..., fill_default: Incomplete | None = ..., combinator=...): ...
def glob_path(_pattern, paths: pattern.Optional[pattern.Iterable] = ..., followlinks: bool = ..., restriction: pattern.Optional[dict[str, str]] = ..., omit_value: pattern.Optional[str] = ...): ...
def strip_constraints(_pattern): ...
