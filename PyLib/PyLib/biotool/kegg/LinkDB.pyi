from .kmodule import KModule as KModule
from typing import Dict, Generator, List, TextIO, Tuple, Union

def path2tsv_iter(text: TextIO) -> Generator[Tuple[str, List[str], str, List[str]], None, None]: ...
def module_from_brite(source: Union[str, TextIO], brite_path: str = ..., module_path: str = ...) -> Tuple[List[Tuple[str, str, str, str, str]], List[Tuple[str, KModule]]]: ...
def load_KEGG_module(module_name, KEGG_DIR) -> None: ...
def map_KO_dict(KO_str: str, ko_match: Dict[str, float]) -> str: ...
def map_KO_substr(KO_str: str, KO_substr: str) -> str: ...
